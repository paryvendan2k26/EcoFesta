{"ast":null,"code":"var _jsxFileName = \"E:\\\\global_goals\\\\EcoFesta\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n\n  // Set default authorization header\n  useEffect(() => {\n    if (token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n    }\n  }, [token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (token) {\n        try {\n          const response = await api.get('/auth/profile');\n          setUser(response.data.user);\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          localStorage.removeItem('token');\n          setToken(null);\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, [token]);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      const {\n        token: newToken,\n        user: userData\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(userData);\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const signup = async userData => {\n    try {\n      const response = await api.post('/auth/signup', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = response.data;\n      localStorage.setItem('token', newToken);\n      setToken(newToken);\n      setUser(newUser);\n      toast.success('Account created successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Signup failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    setToken(null);\n    setUser(null);\n    delete api.defaults.headers.common['Authorization'];\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      setUser(response.data.user);\n      toast.success('Profile updated successfully!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const hasRole = role => {\n    var _user$roles;\n    return user === null || user === void 0 ? void 0 : (_user$roles = user.roles) === null || _user$roles === void 0 ? void 0 : _user$roles.includes(role);\n  };\n  const hasAnyRole = roles => {\n    return roles.some(role => {\n      var _user$roles2;\n      return user === null || user === void 0 ? void 0 : (_user$roles2 = user.roles) === null || _user$roles2 === void 0 ? void 0 : _user$roles2.includes(role);\n    });\n  };\n  const getPrimaryRole = () => {\n    var _user$roles3;\n    return user === null || user === void 0 ? void 0 : (_user$roles3 = user.roles) === null || _user$roles3 === void 0 ? void 0 : _user$roles3[0];\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    login,\n    signup,\n    logout,\n    updateProfile,\n    hasRole,\n    hasAnyRole,\n    getPrimaryRole,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"V8bE6DZSV5/nB2UMC4Uofie15PA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","setToken","localStorage","getItem","defaults","headers","common","checkAuth","response","get","data","error","console","removeItem","login","email","password","post","newToken","userData","setItem","success","_error$response","_error$response$data","message","signup","newUser","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","hasRole","role","_user$roles","roles","includes","hasAnyRole","some","_user$roles2","getPrimaryRole","_user$roles3","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/global_goals/EcoFesta/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n\r\n  // Set default authorization header\r\n  useEffect(() => {\r\n    if (token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (token) {\r\n        try {\r\n          const response = await api.get('/auth/profile');\r\n          setUser(response.data.user);\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          localStorage.removeItem('token');\r\n          setToken(null);\r\n        }\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    checkAuth();\r\n  }, [token]);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      const { token: newToken, user: userData } = response.data;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(userData);\r\n      \r\n      toast.success('Login successful!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const signup = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/signup', userData);\r\n      const { token: newToken, user: newUser } = response.data;\r\n      \r\n      localStorage.setItem('token', newToken);\r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      \r\n      toast.success('Account created successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Signup failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    setToken(null);\r\n    setUser(null);\r\n    delete api.defaults.headers.common['Authorization'];\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      setUser(response.data.user);\r\n      toast.success('Profile updated successfully!');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const hasRole = (role) => {\r\n    return user?.roles?.includes(role);\r\n  };\r\n\r\n  const hasAnyRole = (roles) => {\r\n    return roles.some(role => user?.roles?.includes(role));\r\n  };\r\n\r\n  const getPrimaryRole = () => {\r\n    return user?.roles?.[0];\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    login,\r\n    signup,\r\n    logout,\r\n    updateProfile,\r\n    hasRole,\r\n    hasAnyRole,\r\n    getPrimaryRole,\r\n    isAuthenticated: !!user\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}