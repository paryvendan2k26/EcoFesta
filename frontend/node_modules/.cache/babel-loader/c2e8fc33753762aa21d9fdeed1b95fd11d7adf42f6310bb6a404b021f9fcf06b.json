{"ast":null,"code":"var _jsxFileName = \"E:\\\\global_goals\\\\EcoFesta\\\\frontend\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  const context = useContext(SocketContext);\n  if (!context) {\n    throw new Error('useSocket must be used within a SocketProvider');\n  }\n  return context;\n};\n_s(useSocket, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState({});\n  const [typingUsers, setTypingUsers] = useState({});\n  const {\n    user,\n    isAuthenticated\n  } = useAuth();\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\n        auth: {\n          userId: user.id\n        }\n      });\n      newSocket.on('connect', () => {\n        console.log('Connected to server');\n        setConnected(true);\n\n        // Join user's personal room\n        newSocket.emit('join', user.id);\n      });\n      newSocket.on('disconnect', () => {\n        console.log('Disconnected from server');\n        setConnected(false);\n      });\n      newSocket.on('receiveMessage', data => {\n        const {\n          from,\n          message,\n          timestamp\n        } = data;\n        setMessages(prev => ({\n          ...prev,\n          [from]: [...(prev[from] || []), {\n            from,\n            message,\n            timestamp,\n            isOwn: false\n          }]\n        }));\n      });\n      newSocket.on('messageSent', data => {\n        const {\n          to,\n          message,\n          timestamp\n        } = data;\n        setMessages(prev => ({\n          ...prev,\n          [to]: [...(prev[to] || []), {\n            to,\n            message,\n            timestamp,\n            isOwn: true\n          }]\n        }));\n      });\n      newSocket.on('userTyping', data => {\n        const {\n          from,\n          isTyping\n        } = data;\n        setTypingUsers(prev => ({\n          ...prev,\n          [from]: isTyping\n        }));\n\n        // Clear typing indicator after 3 seconds\n        if (isTyping) {\n          setTimeout(() => {\n            setTypingUsers(prev => ({\n              ...prev,\n              [from]: false\n            }));\n          }, 3000);\n        }\n      });\n      newSocket.on('userStatusUpdate', data => {\n        const {\n          userId,\n          isOnline\n        } = data;\n        // Handle user online/offline status\n        console.log(`User ${userId} is ${isOnline ? 'online' : 'offline'}`);\n      });\n      newSocket.on('error', error => {\n        console.error('Socket error:', error);\n      });\n      setSocket(newSocket);\n      return () => {\n        newSocket.close();\n        setSocket(null);\n        setConnected(false);\n      };\n    }\n  }, [isAuthenticated, user]);\n  const sendMessage = (to, message) => {\n    if (socket && connected) {\n      socket.emit('sendMessage', {\n        to,\n        message,\n        from: user.id\n      });\n    }\n  };\n  const sendTyping = (to, isTyping) => {\n    if (socket && connected) {\n      socket.emit('typing', {\n        to,\n        from: user.id,\n        isTyping\n      });\n    }\n  };\n  const updateUserStatus = (to, isOnline) => {\n    if (socket && connected) {\n      socket.emit('userStatus', {\n        to,\n        userId: user.id,\n        isOnline\n      });\n    }\n  };\n  const getMessages = userId => {\n    return messages[userId] || [];\n  };\n  const clearMessages = userId => {\n    setMessages(prev => {\n      const newMessages = {\n        ...prev\n      };\n      delete newMessages[userId];\n      return newMessages;\n    });\n  };\n  const isUserTyping = userId => {\n    return typingUsers[userId] || false;\n  };\n  const value = {\n    socket,\n    connected,\n    sendMessage,\n    sendTyping,\n    updateUserStatus,\n    getMessages,\n    clearMessages,\n    isUserTyping\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"kRaSn1qzkAnFYLzFe/9n5HxC0PM=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","context","Error","SocketProvider","children","_s2","socket","setSocket","connected","setConnected","messages","setMessages","typingUsers","setTypingUsers","user","isAuthenticated","newSocket","process","env","REACT_APP_SOCKET_URL","auth","userId","id","on","console","log","emit","data","from","message","timestamp","prev","isOwn","to","isTyping","setTimeout","isOnline","error","close","sendMessage","sendTyping","updateUserStatus","getMessages","clearMessages","newMessages","isUserTyping","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/global_goals/EcoFesta/frontend/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { useAuth } from './AuthContext';\r\n\r\nconst SocketContext = createContext();\r\n\r\nexport const useSocket = () => {\r\n  const context = useContext(SocketContext);\r\n  if (!context) {\r\n    throw new Error('useSocket must be used within a SocketProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [messages, setMessages] = useState({});\r\n  const [typingUsers, setTypingUsers] = useState({});\r\n  const { user, isAuthenticated } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated && user) {\r\n      const newSocket = io(process.env.REACT_APP_SOCKET_URL || 'http://localhost:5000', {\r\n        auth: {\r\n          userId: user.id\r\n        }\r\n      });\r\n\r\n      newSocket.on('connect', () => {\r\n        console.log('Connected to server');\r\n        setConnected(true);\r\n        \r\n        // Join user's personal room\r\n        newSocket.emit('join', user.id);\r\n      });\r\n\r\n      newSocket.on('disconnect', () => {\r\n        console.log('Disconnected from server');\r\n        setConnected(false);\r\n      });\r\n\r\n      newSocket.on('receiveMessage', (data) => {\r\n        const { from, message, timestamp } = data;\r\n        setMessages(prev => ({\r\n          ...prev,\r\n          [from]: [\r\n            ...(prev[from] || []),\r\n            { from, message, timestamp, isOwn: false }\r\n          ]\r\n        }));\r\n      });\r\n\r\n      newSocket.on('messageSent', (data) => {\r\n        const { to, message, timestamp } = data;\r\n        setMessages(prev => ({\r\n          ...prev,\r\n          [to]: [\r\n            ...(prev[to] || []),\r\n            { to, message, timestamp, isOwn: true }\r\n          ]\r\n        }));\r\n      });\r\n\r\n      newSocket.on('userTyping', (data) => {\r\n        const { from, isTyping } = data;\r\n        setTypingUsers(prev => ({\r\n          ...prev,\r\n          [from]: isTyping\r\n        }));\r\n\r\n        // Clear typing indicator after 3 seconds\r\n        if (isTyping) {\r\n          setTimeout(() => {\r\n            setTypingUsers(prev => ({\r\n              ...prev,\r\n              [from]: false\r\n            }));\r\n          }, 3000);\r\n        }\r\n      });\r\n\r\n      newSocket.on('userStatusUpdate', (data) => {\r\n        const { userId, isOnline } = data;\r\n        // Handle user online/offline status\r\n        console.log(`User ${userId} is ${isOnline ? 'online' : 'offline'}`);\r\n      });\r\n\r\n      newSocket.on('error', (error) => {\r\n        console.error('Socket error:', error);\r\n      });\r\n\r\n      setSocket(newSocket);\r\n\r\n      return () => {\r\n        newSocket.close();\r\n        setSocket(null);\r\n        setConnected(false);\r\n      };\r\n    }\r\n  }, [isAuthenticated, user]);\r\n\r\n  const sendMessage = (to, message) => {\r\n    if (socket && connected) {\r\n      socket.emit('sendMessage', {\r\n        to,\r\n        message,\r\n        from: user.id\r\n      });\r\n    }\r\n  };\r\n\r\n  const sendTyping = (to, isTyping) => {\r\n    if (socket && connected) {\r\n      socket.emit('typing', {\r\n        to,\r\n        from: user.id,\r\n        isTyping\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateUserStatus = (to, isOnline) => {\r\n    if (socket && connected) {\r\n      socket.emit('userStatus', {\r\n        to,\r\n        userId: user.id,\r\n        isOnline\r\n      });\r\n    }\r\n  };\r\n\r\n  const getMessages = (userId) => {\r\n    return messages[userId] || [];\r\n  };\r\n\r\n  const clearMessages = (userId) => {\r\n    setMessages(prev => {\r\n      const newMessages = { ...prev };\r\n      delete newMessages[userId];\r\n      return newMessages;\r\n    });\r\n  };\r\n\r\n  const isUserTyping = (userId) => {\r\n    return typingUsers[userId] || false;\r\n  };\r\n\r\n  const value = {\r\n    socket,\r\n    connected,\r\n    sendMessage,\r\n    sendTyping,\r\n    updateUserStatus,\r\n    getMessages,\r\n    clearMessages,\r\n    isUserTyping\r\n  };\r\n\r\n  return (\r\n    <SocketContext.Provider value={value}>\r\n      {children}\r\n    </SocketContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}